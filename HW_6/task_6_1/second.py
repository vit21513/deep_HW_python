# Создайте модуль с функцией внутри.
# Функция получает на вход загадку, список с возможными верными вариантами отгадок и количество попыток на угадывание.
# Функция возвращает номер попытки, с которой была отгадана загадка или ноль, если попытки исчерпаны.
#
# Добавьте в модуль с загадками функцию, которая хранит словарь списков.
# Ключ словаря - загадка, значение - список с отгадками.
# Функция в цикле вызывает загадывающую функцию, из предыдущей задачи, чтобы передать ей все свои загадки.

# Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки) и число (номер попытки, с которой она угадана).
# Функция формирует словарь с информацией о результатах отгадывания.
# Для хранения используйте защищённый словарь уровня модуля.
# Отдельно напишите функцию, которая выводит результаты угадывания из защищённого словаря в удобном для чтения виде.
# Для формирования результатов используйте генераторное выражение.

__all__ = ['game', 'print_res']


def enigma(question, variants, attempts):
    for i in range(1, attempts + 1):
        answer = input(f'Отгадайте загадку, попытка {i}: {question}: ').strip().lower()
        if answer in variants:
            return (i)
    return 0


def game(attempts=5):
    dict_enigma = {
        'Зимой и летом одним цветом': ['ель', 'ёлка', 'елка'],
        'Кто его раздевает, тот слёзы проливает': ['лук', 'лучок', 'перец']
    }

    for key, value in dict_enigma.items():
        num_of_att = enigma(key, value, attempts)

        if num_of_att:
            print(f'Вы угадали с {num_of_att} попытки')
        else:
            print('Вы не угадали')


def game(attempts=5):
    dict_enigma = {
        'Зимой и летом одним цветом': ['ель', 'ёлка', 'елка'],
        'Кто его раздевает, тот слёзы проливает': ['лук', 'лучок', 'перец'],
    }
    for key, value in dict_enigma.items():
        save_result(key, enigma(key, value, attempts))


def save_result(key, num_of_att):
    _res_dict[key] = num_of_att


def print_res(_res_dict):
    gen = (key + '-' + str(value) + '\n' for key, value in _res_dict.items())
    print(*gen)


_res_dict = {}

if __name__ == '__main__':
    game()
    print_res(_res_dict)
